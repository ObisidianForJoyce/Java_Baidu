# azure-pipelines.yml
trigger:
- master  # 监听 main 分支的代码提交

pool:
  vmImage: 'windows-latest'  # 使用微软托管代理

variables:
  MAVEN_CACHE_FOLDER: $(Pipeline.Workspace)/.m2
  system.debug: true  # 启用详细日志
  TAR_VERBOSE: true   # 专用 TAR 日志

steps:
- task: Cache@2
  inputs:
    key: 'maven | "$(Agent.OS)" | **/pom.xml'
    restoreKeys: |
      maven | "$(Agent.OS)"
    path: $(MAVEN_CACHE_FOLDER)
  displayName: 'Restore Maven Dependencies'

- task: JavaToolInstaller@0  # 关键步骤
  inputs:
    versionSpec: '17'
    jdkArchitectureOption: 'x64'
    jdkSourceOption: 'PreInstalled'

- script: java -version  # 验证版本
  displayName: '检查 Java 版本'

- task: Maven@3
  inputs:
    mavenPomFile: 'pom.xml'
    goals: 'clean install'
    options: '-DskipTests=true'  # 可选：跳过测试


- task: CopyFiles@2  # 打包产物归档
  inputs:
    SourceFolder: 'target'
    Contents: '*.jar'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'

- script: |
    echo "运行 UI 测试"
    mvn test -Dtest=SearchTest
  displayName: '执行 UI 测试'
  env:
    EDGE_WEBDRIVER_PATH: $(System.DefaultWorkingDirectory)/drivers

- script: |
    mvn allure:report
  displayName: '生成 Allure 报告'

- task: PublishTestResults@2
  inputs:
    testResultsFormat: 'Allure'
    testResultsFiles: 'allure-results/*.xml'
- task: PublishBuildArtifacts@1  # 发布构建产物
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'

- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
      echo "##vso[task.complete result=Succeeded;]DONE"
  displayName: '发送通知'
  condition: always()
  env:
    SYSTEM_ACCESSTOKEN: $(System.AccessToken)

- script: |
    echo "当前缓存路径：$(MAVEN_CACHE_FOLDER)"
    echo "路径长度：${#MAVEN_CACHE_FOLDER}"
  displayName: '路径验证'

- script: |
    # 清理 Maven 临时文件
    find $(MAVEN_CACHE_FOLDER) -name "*.lock" -delete
    find $(MAVEN_CACHE_FOLDER) -name "*.part" -delete
    find $(MAVEN_CACHE_FOLDER) -name "_remote.repositories" -delete
  displayName: '清理临时文件'
  condition: always()  # 总是执行

- script: |
    # 安装 7-Zip
    choco install 7zip -y

    # 手动创建 TAR 包
    7z a -ttar $(Build.SourcesDirectory)/cache.tar $(MAVEN_CACHE_FOLDER)

    # 验证 TAR 包
    7z l cache.tar
  displayName: '手动 TAR 测试'
  continueOnError: true  # 允许失败继续