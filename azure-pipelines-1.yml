trigger:
- master

pool: JoyceP53  # slef-hosted agent pool

variables:
  JAVA_HOME: C:\Program Files\Java\jdk-17  
  MAVEN_CACHE_FOLDER: $(Pipeline.Workspace)/.m2/repository
  MAVEN_OPTS: '-Dmaven.repo.local=$(MAVEN_CACHE_FOLDER)'
  EDGE_WEBDRIVER_PATH: C:\drivers
  MAVEN_HOME: C:\Users\Joyce\Install\maven\apache-maven-3.9.9 
  PATH: $(PATH);$(JAVA_HOME)\bin;$(MAVEN_HOME)\bin

steps:
# ----------------------
# Stage 0: 环境验证
# ----------------------
- task: CmdLine@2
  inputs:
    script: |
      set PATH=$(MAVEN_HOME)\bin;%PATH%
      mvn clean install
  displayName: '安装 Maven'
  condition: succeededOrFailed()
  
- script: |
    echo "Java 版本:"
    java -version
    echo "Maven 版本:"
    mvn -version
  displayName: '环境检查'
  condition: succeededOrFailed()

- script: |
    echo "=== Git 全局配置 ==="
    git config --global --list | findstr "ssl"
    echo "=== 当前环境变量 ==="
    set | findstr /I "SSL"
  displayName: '验证配置生效性'
  condition: succeededOrFailed()
  
# ----------------------
# Stage 0: Cache Maven Dependencies
# ----------------------
- task: Cache@2
  inputs:
    key: 'maven | "$(Agent.OS)" | **/pom.xml'
    restoreKeys: |
      maven | "$(Agent.OS)"
      maven
    path: $(MAVEN_CACHE_FOLDER)
  displayName: 'Cache Maven dependencies'

# ----------------------
# Stage 2: Maven Build (with cache)
# ----------------------
- script: |
    mvn clean install -Dmaven.repo.local=$(MAVEN_CACHE_FOLDER)  
  displayName: 'Build package'

# ----------------------
# Stage 3: UI Test Execution (Headless Mode)
# ----------------------
- script: |
    mvn test -Dtest=SearchTest -Dbrowser.headless=true -Dmaven.repo.local=$(MAVEN_CACHE_FOLDER)
  displayName: 'Execute UI tests (Headless Edge)'
  env:
    EDGE_WEBDRIVER_PATH: $(EDGE_WEBDRIVER_PATH)  


# ----------------------
# Stage 4: Test Results Publishing
# ----------------------
- task: PublishTestResults@2
  inputs:
    testResultsFormat: 'JUnit'
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    mergeTestResults: true
  displayName: 'Test Results Publishing'
  condition: succeededOrFailed()

# ----------------------
# Stage 5: Artifact Archiving
# ----------------------
- task: CopyFiles@2
  inputs:
    SourceFolder: 'target'
    Contents: '*.jar'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
  displayName: 'Collect JAR artifacts'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'JarFiles'
  displayName: 'Publish JAR artifacts'