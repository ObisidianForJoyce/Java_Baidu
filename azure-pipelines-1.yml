trigger:
- master

pool: JoyceP53

variables:
  MAVEN_CACHE_FOLDER: $(Pipeline.Workspace)/.m2/repository
  EDGE_DRIVER_LOGFILE: $(Agent.WorkFolder)/logs/edgedriver.log

steps:
# ----------------------
# Stage 1: Cache Maven Dependencies
# ----------------------
- task: Cache@2
  inputs:
    key: 'maven | "$(Agent.OS)" | **/pom.xml'
    restoreKeys: |
      maven | "$(Agent.OS)"
      maven
    path: $(MAVEN_CACHE_FOLDER)
  displayName: 'Cache Maven dependencies'

- script: |
    dir "$(EDGE_WEBDRIVER_PATH)\\msedgedriver.exe"
  displayName: 'Check Edge Driver Existence'

# ----------------------
# Stage 2: Maven Build (with cache)
# ----------------------
- script: |
    mvn clean install -Dmaven.repo.local=$(MAVEN_CACHE_FOLDER)
  displayName: 'Build package'
  condition: succeededOrFailed()

# ----------------------
# Stage 3: UI Test Execution (Headless Mode)
# ----------------------
- script: |
    mvn test -Dtest=SearchTest ^
      -Dwebdriver.edge.driver="$(EDGE_WEBDRIVER_PATH)\\msedgedriver.exe" ^
      -Dedge.binary.path="$(EDGE_BINARY_PATH)\\msedge.exe" ^
      -Dwebdriver.edge.logfile="$(EDGE_DRIVER_LOGFILE)" ^
      -Dwebdriver.edge.verboseLogging=true ^
      -Dmaven.repo.local=$(MAVEN_CACHE_FOLDER)
  displayName: 'Execute UI tests with Full Logging'
  env:
    EDGE_WEBDRIVER_PATH: $(EDGE_WEBDRIVER_PATH)
  condition: succeededOrFailed()

# ----------------------
# Stage 4: Test Results Publishing
# ----------------------
- task: PublishTestResults@2
  inputs:
    testResultsFormat: 'JUnit'
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    mergeTestResults: true
  displayName: 'Publish Test Results'
  condition: succeededOrFailed()

# ----------------------
# Stage 5: Artifact Archiving
# ----------------------
- task: CopyFiles@2
  inputs:
    SourceFolder: 'target'
    Contents: '*.jar'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
  displayName: 'Collect JAR Artifacts'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'JarFiles'
  displayName: 'Publish JAR Artifacts'